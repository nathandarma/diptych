{"ast":null,"code":"\"use client\";\n\n// src/utils.ts\nimport { useContext, useMemo } from \"react\";\nimport { mergeProps, mergeRefs, useObjectRef } from \"@react-aria/utils\";\nvar DEFAULT_SLOT = Symbol(\"default\");\nfunction useSlottedContext(context, slot) {\n  let ctx = useContext(context);\n  if (slot === null) {\n    return null;\n  }\n  if (ctx && typeof ctx === \"object\" && \"slots\" in ctx && ctx.slots) {\n    let availableSlots = new Intl.ListFormat().format(Object.keys(ctx.slots).map(p => `\"${p}\"`));\n    if (!slot && !ctx.slots[DEFAULT_SLOT]) {\n      throw new Error(`A slot prop is required. Valid slot names are ${availableSlots}.`);\n    }\n    let slotKey = slot || DEFAULT_SLOT;\n    if (!ctx.slots[slotKey]) {\n      throw new Error(`Invalid slot \"${slot}\". Valid slot names are ${availableSlots}.`);\n    }\n    return ctx.slots[slotKey];\n  }\n  return ctx;\n}\nfunction useContextProps(props, ref, context) {\n  let ctx = useSlottedContext(context, props.slot) || {};\n  let {\n    ref: contextRef,\n    ...contextProps\n  } = ctx;\n  let mergedRef = useObjectRef(useMemo(() => mergeRefs(ref, contextRef), [ref, contextRef]));\n  let mergedProps = mergeProps(contextProps, props);\n  if (\"style\" in contextProps && contextProps.style && \"style\" in props && props.style) {\n    if (typeof contextProps.style === \"function\" || typeof props.style === \"function\") {\n      mergedProps.style = renderProps => {\n        let contextStyle = typeof contextProps.style === \"function\" ? contextProps.style(renderProps) : contextProps.style;\n        let defaultStyle = {\n          ...renderProps.defaultStyle,\n          ...contextStyle\n        };\n        let style = typeof props.style === \"function\" ? props.style({\n          ...renderProps,\n          defaultStyle\n        }) : props.style;\n        return {\n          ...defaultStyle,\n          ...style\n        };\n      };\n    } else {\n      mergedProps.style = {\n        ...contextProps.style,\n        ...props.style\n      };\n    }\n  }\n  return [mergedProps, mergedRef];\n}\nexport { DEFAULT_SLOT, useSlottedContext, useContextProps };","map":{"version":3,"names":["useContext","useMemo","mergeProps","mergeRefs","useObjectRef","DEFAULT_SLOT","Symbol","useSlottedContext","context","slot","ctx","slots","availableSlots","Intl","ListFormat","format","Object","keys","map","p","Error","slotKey","useContextProps","props","ref","contextRef","contextProps","mergedRef","mergedProps","style","renderProps","contextStyle","defaultStyle"],"sources":["/Users/nathandarma/Documents/App Testing/Diptych/diptych/node_modules/@heroui/form/dist/chunk-BSTJ7ZCN.mjs"],"sourcesContent":["\"use client\";\n\n// src/utils.ts\nimport { useContext, useMemo } from \"react\";\nimport { mergeProps, mergeRefs, useObjectRef } from \"@react-aria/utils\";\nvar DEFAULT_SLOT = Symbol(\"default\");\nfunction useSlottedContext(context, slot) {\n  let ctx = useContext(context);\n  if (slot === null) {\n    return null;\n  }\n  if (ctx && typeof ctx === \"object\" && \"slots\" in ctx && ctx.slots) {\n    let availableSlots = new Intl.ListFormat().format(Object.keys(ctx.slots).map((p) => `\"${p}\"`));\n    if (!slot && !ctx.slots[DEFAULT_SLOT]) {\n      throw new Error(`A slot prop is required. Valid slot names are ${availableSlots}.`);\n    }\n    let slotKey = slot || DEFAULT_SLOT;\n    if (!ctx.slots[slotKey]) {\n      throw new Error(`Invalid slot \"${slot}\". Valid slot names are ${availableSlots}.`);\n    }\n    return ctx.slots[slotKey];\n  }\n  return ctx;\n}\nfunction useContextProps(props, ref, context) {\n  let ctx = useSlottedContext(context, props.slot) || {};\n  let { ref: contextRef, ...contextProps } = ctx;\n  let mergedRef = useObjectRef(useMemo(() => mergeRefs(ref, contextRef), [ref, contextRef]));\n  let mergedProps = mergeProps(contextProps, props);\n  if (\"style\" in contextProps && contextProps.style && \"style\" in props && props.style) {\n    if (typeof contextProps.style === \"function\" || typeof props.style === \"function\") {\n      mergedProps.style = (renderProps) => {\n        let contextStyle = typeof contextProps.style === \"function\" ? contextProps.style(renderProps) : contextProps.style;\n        let defaultStyle = { ...renderProps.defaultStyle, ...contextStyle };\n        let style = typeof props.style === \"function\" ? props.style({ ...renderProps, defaultStyle }) : props.style;\n        return { ...defaultStyle, ...style };\n      };\n    } else {\n      mergedProps.style = { ...contextProps.style, ...props.style };\n    }\n  }\n  return [mergedProps, mergedRef];\n}\n\nexport {\n  DEFAULT_SLOT,\n  useSlottedContext,\n  useContextProps\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}