{"ast":null,"code":"\"use client\";\n\n// src/use-spinner.ts\nimport { mapPropsVariants } from \"@heroui/system-rsc\";\nimport { spinner } from \"@heroui/theme\";\nimport { clsx, objectToDeps } from \"@heroui/shared-utils\";\nimport { useMemo, useCallback } from \"react\";\nimport { useProviderContext } from \"@heroui/system\";\nfunction useSpinner(originalProps) {\n  var _a, _b;\n  const [props, variantProps] = mapPropsVariants(originalProps, spinner.variantKeys);\n  const globalContext = useProviderContext();\n  const variant = (_b = (_a = originalProps == null ? void 0 : originalProps.variant) != null ? _a : globalContext == null ? void 0 : globalContext.spinnerVariant) != null ? _b : \"default\";\n  const {\n    children,\n    className,\n    classNames,\n    label: labelProp,\n    ...otherProps\n  } = props;\n  const slots = useMemo(() => spinner({\n    ...variantProps\n  }), [objectToDeps(variantProps)]);\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  const label = labelProp || children;\n  const ariaLabel = useMemo(() => {\n    if (label && typeof label === \"string\") {\n      return label;\n    }\n    return !otherProps[\"aria-label\"] ? \"Loading\" : \"\";\n  }, [children, label, otherProps[\"aria-label\"]]);\n  const getSpinnerProps = useCallback(() => ({\n    \"aria-label\": ariaLabel,\n    className: slots.base({\n      class: baseStyles\n    }),\n    ...otherProps\n  }), [ariaLabel, slots, baseStyles, otherProps]);\n  return {\n    label,\n    slots,\n    classNames,\n    variant,\n    getSpinnerProps\n  };\n}\nexport { useSpinner };","map":{"version":3,"names":["mapPropsVariants","spinner","clsx","objectToDeps","useMemo","useCallback","useProviderContext","useSpinner","originalProps","_a","_b","props","variantProps","variantKeys","globalContext","variant","spinnerVariant","children","className","classNames","label","labelProp","otherProps","slots","baseStyles","base","ariaLabel","getSpinnerProps","class"],"sources":["/Users/nathandarma/Documents/App Testing/Diptych/diptych/node_modules/@heroui/spinner/dist/chunk-IKKYW34A.mjs"],"sourcesContent":["\"use client\";\n\n// src/use-spinner.ts\nimport { mapPropsVariants } from \"@heroui/system-rsc\";\nimport { spinner } from \"@heroui/theme\";\nimport { clsx, objectToDeps } from \"@heroui/shared-utils\";\nimport { useMemo, useCallback } from \"react\";\nimport { useProviderContext } from \"@heroui/system\";\nfunction useSpinner(originalProps) {\n  var _a, _b;\n  const [props, variantProps] = mapPropsVariants(originalProps, spinner.variantKeys);\n  const globalContext = useProviderContext();\n  const variant = (_b = (_a = originalProps == null ? void 0 : originalProps.variant) != null ? _a : globalContext == null ? void 0 : globalContext.spinnerVariant) != null ? _b : \"default\";\n  const { children, className, classNames, label: labelProp, ...otherProps } = props;\n  const slots = useMemo(() => spinner({ ...variantProps }), [objectToDeps(variantProps)]);\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  const label = labelProp || children;\n  const ariaLabel = useMemo(() => {\n    if (label && typeof label === \"string\") {\n      return label;\n    }\n    return !otherProps[\"aria-label\"] ? \"Loading\" : \"\";\n  }, [children, label, otherProps[\"aria-label\"]]);\n  const getSpinnerProps = useCallback(\n    () => ({\n      \"aria-label\": ariaLabel,\n      className: slots.base({\n        class: baseStyles\n      }),\n      ...otherProps\n    }),\n    [ariaLabel, slots, baseStyles, otherProps]\n  );\n  return { label, slots, classNames, variant, getSpinnerProps };\n}\n\nexport {\n  useSpinner\n};\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA,SAASA,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,OAAO,QAAQ,eAAe;AACvC,SAASC,IAAI,EAAEC,YAAY,QAAQ,sBAAsB;AACzD,SAASC,OAAO,EAAEC,WAAW,QAAQ,OAAO;AAC5C,SAASC,kBAAkB,QAAQ,gBAAgB;AACnD,SAASC,UAAUA,CAACC,aAAa,EAAE;EACjC,IAAIC,EAAE,EAAEC,EAAE;EACV,MAAM,CAACC,KAAK,EAAEC,YAAY,CAAC,GAAGZ,gBAAgB,CAACQ,aAAa,EAAEP,OAAO,CAACY,WAAW,CAAC;EAClF,MAAMC,aAAa,GAAGR,kBAAkB,CAAC,CAAC;EAC1C,MAAMS,OAAO,GAAG,CAACL,EAAE,GAAG,CAACD,EAAE,GAAGD,aAAa,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,aAAa,CAACO,OAAO,KAAK,IAAI,GAAGN,EAAE,GAAGK,aAAa,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,aAAa,CAACE,cAAc,KAAK,IAAI,GAAGN,EAAE,GAAG,SAAS;EAC1L,MAAM;IAAEO,QAAQ;IAAEC,SAAS;IAAEC,UAAU;IAAEC,KAAK,EAAEC,SAAS;IAAE,GAAGC;EAAW,CAAC,GAAGX,KAAK;EAClF,MAAMY,KAAK,GAAGnB,OAAO,CAAC,MAAMH,OAAO,CAAC;IAAE,GAAGW;EAAa,CAAC,CAAC,EAAE,CAACT,YAAY,CAACS,YAAY,CAAC,CAAC,CAAC;EACvF,MAAMY,UAAU,GAAGtB,IAAI,CAACiB,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACM,IAAI,EAAEP,SAAS,CAAC;EACjF,MAAME,KAAK,GAAGC,SAAS,IAAIJ,QAAQ;EACnC,MAAMS,SAAS,GAAGtB,OAAO,CAAC,MAAM;IAC9B,IAAIgB,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MACtC,OAAOA,KAAK;IACd;IACA,OAAO,CAACE,UAAU,CAAC,YAAY,CAAC,GAAG,SAAS,GAAG,EAAE;EACnD,CAAC,EAAE,CAACL,QAAQ,EAAEG,KAAK,EAAEE,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC;EAC/C,MAAMK,eAAe,GAAGtB,WAAW,CACjC,OAAO;IACL,YAAY,EAAEqB,SAAS;IACvBR,SAAS,EAAEK,KAAK,CAACE,IAAI,CAAC;MACpBG,KAAK,EAAEJ;IACT,CAAC,CAAC;IACF,GAAGF;EACL,CAAC,CAAC,EACF,CAACI,SAAS,EAAEH,KAAK,EAAEC,UAAU,EAAEF,UAAU,CAC3C,CAAC;EACD,OAAO;IAAEF,KAAK;IAAEG,KAAK;IAAEJ,UAAU;IAAEJ,OAAO;IAAEY;EAAgB,CAAC;AAC/D;AAEA,SACEpB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}