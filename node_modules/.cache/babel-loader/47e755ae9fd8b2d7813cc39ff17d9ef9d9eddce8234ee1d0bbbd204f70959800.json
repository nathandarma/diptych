{"ast":null,"code":"\"use client\";\n\n// src/use-toast.ts\nimport { mapPropsVariants, useProviderContext } from \"@heroui/system\";\nimport { toast as toastTheme } from \"@heroui/theme\";\nimport { useDOMRef } from \"@heroui/react-utils\";\nimport { clsx, dataAttr, isEmpty, objectToDeps } from \"@heroui/shared-utils\";\nimport { useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState } from \"react\";\nimport { useToast as useToastAria } from \"@react-aria/toast\";\nimport { chain, mergeProps } from \"@react-aria/utils\";\nimport { useHover } from \"@react-aria/interactions\";\nimport { useIsMobile } from \"@heroui/use-is-mobile\";\nvar SWIPE_THRESHOLD_X = 100;\nvar SWIPE_THRESHOLD_Y = 20;\nvar INITIAL_POSITION = 50;\nfunction useToast(originalProps) {\n  var _a, _b;\n  const [props, variantProps] = mapPropsVariants(originalProps, toastTheme.variantKeys);\n  const {\n    ref,\n    as,\n    title,\n    description,\n    className,\n    classNames,\n    toast,\n    endContent,\n    closeIcon,\n    hideIcon = false,\n    placement: placementProp = \"bottom-right\",\n    isRegionExpanded,\n    hideCloseButton = false,\n    state,\n    total = 1,\n    index = 0,\n    heights,\n    promise: promiseProp,\n    setHeights,\n    toastOffset = 0,\n    motionProps,\n    timeout = 6e3,\n    shouldShowTimeoutProgress = false,\n    icon,\n    onClose,\n    severity,\n    maxVisibleToasts,\n    ...otherProps\n  } = props;\n  const {\n    isHovered: isToastHovered,\n    hoverProps\n  } = useHover({\n    isDisabled: false\n  });\n  const globalContext = useProviderContext();\n  const disableAnimation = (_b = (_a = originalProps == null ? void 0 : originalProps.disableAnimation) != null ? _a : globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _b : false;\n  const isMobile = useIsMobile();\n  let placement = placementProp;\n  if (isMobile) {\n    if (placementProp.includes(\"top\")) {\n      placement = \"top-center\";\n    } else {\n      placement = \"bottom-center\";\n    }\n  }\n  const animationRef = useRef(null);\n  const startTime = useRef(null);\n  const progressRef = useRef(0);\n  const progressBarRef = useRef(null);\n  const pausedTime = useRef(0);\n  const timeElapsed = useRef(0);\n  useEffect(() => {\n    if (progressBarRef.current) {\n      progressBarRef.current.style.width = \"0%\";\n    }\n  }, []);\n  const [isLoading, setIsLoading] = useState(!!promiseProp);\n  useEffect(() => {\n    if (!promiseProp) return;\n    promiseProp.finally(() => {\n      setIsLoading(false);\n    });\n  }, [promiseProp]);\n  useEffect(() => {\n    const updateProgress = timestamp => {\n      if (!timeout || isLoading) {\n        return;\n      }\n      if (startTime.current === null) {\n        startTime.current = timestamp;\n      }\n      if (isToastHovered || isRegionExpanded || index != total - 1) {\n        pausedTime.current += timestamp - startTime.current;\n        startTime.current = null;\n        animationRef.current = requestAnimationFrame(updateProgress);\n        return;\n      }\n      const elapsed = timestamp - startTime.current + pausedTime.current;\n      timeElapsed.current = elapsed;\n      if (timeElapsed.current >= timeout) {\n        state.close(toast.key);\n      }\n      progressRef.current = Math.min(elapsed / timeout * 100, 100);\n      if (progressBarRef.current) {\n        progressBarRef.current.style.width = `${shouldShowTimeoutProgress ? progressRef.current : 0}%`;\n      }\n      if (progressRef.current < 100) {\n        animationRef.current = requestAnimationFrame(updateProgress);\n      }\n    };\n    animationRef.current = requestAnimationFrame(updateProgress);\n    return () => {\n      if (animationRef.current !== null) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, [timeout, shouldShowTimeoutProgress, state, isToastHovered, index, total, isRegionExpanded, isLoading]);\n  const Component = as || \"div\";\n  const loadingIcon = icon;\n  const domRef = useDOMRef(ref);\n  const baseStyles = clsx(className, classNames == null ? void 0 : classNames.base);\n  const {\n    toastProps,\n    contentProps,\n    titleProps,\n    descriptionProps\n  } = useToastAria(props, state, domRef);\n  const [mounted, setMounted] = useState(false);\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n  const [initialHeight, setInitialHeight] = useState(0);\n  const [isToastExiting, setIsToastExiting] = useState(false);\n  useLayoutEffect(() => {\n    if (!domRef.current || !mounted || isToastExiting) {\n      return;\n    }\n    const toastNode = domRef.current;\n    const originalHeight = toastNode.style.height;\n    toastNode.style.height = \"auto\";\n    const computedStyle = getComputedStyle(toastNode);\n    const marginTop = parseFloat(computedStyle.marginTop);\n    const marginBottom = parseFloat(computedStyle.marginBottom);\n    const newHeight = toastNode.getBoundingClientRect().height + marginTop + marginBottom;\n    toastNode.style.height = originalHeight;\n    setInitialHeight(prevHeight => prevHeight !== newHeight ? newHeight : prevHeight);\n    const updatedHeights = [...heights];\n    if (updatedHeights.length > index) {\n      updatedHeights[index] = newHeight;\n    } else {\n      updatedHeights.push(newHeight);\n    }\n    setHeights(updatedHeights);\n  }, [mounted, total, setHeights, index, isToastExiting]);\n  let liftHeight = 4;\n  for (let idx = index + 1; idx < total; idx++) {\n    liftHeight += heights[idx];\n  }\n  const frontHeight = heights[heights.length - 1];\n  const slots = useMemo(() => toastTheme({\n    ...variantProps,\n    disableAnimation\n  }), [objectToDeps(variantProps)]);\n  const multiplier = placement.includes(\"top\") ? 1 : -1;\n  const toastVariants = {\n    hidden: {\n      opacity: 0,\n      y: -INITIAL_POSITION * multiplier\n    },\n    visible: {\n      opacity: 1,\n      y: 0\n    },\n    exit: {\n      opacity: 0,\n      y: -INITIAL_POSITION * multiplier\n    }\n  };\n  const [drag, setDrag] = useState(false);\n  const [dragValue, setDragValue] = useState(0);\n  const shouldCloseToast = (offsetX, offsetY) => {\n    const isRight = placement.includes(\"right\");\n    const isLeft = placement.includes(\"left\");\n    const isCenterTop = placement === \"top-center\";\n    const isCenterBottom = placement === \"bottom-center\";\n    if (isRight && offsetX >= SWIPE_THRESHOLD_X || isLeft && offsetX <= -SWIPE_THRESHOLD_X || isCenterTop && offsetY <= -SWIPE_THRESHOLD_Y || isCenterBottom && offsetY >= SWIPE_THRESHOLD_Y) {\n      return true;\n    }\n  };\n  const getDragElasticConstraints = placement2 => {\n    const elasticConstraint = {\n      top: 0,\n      bottom: 0,\n      right: 0,\n      left: 0\n    };\n    if (placement2 === \"bottom-center\") {\n      elasticConstraint.bottom = 1;\n      return elasticConstraint;\n    }\n    if (placement2 === \"top-center\") {\n      elasticConstraint.top = 1;\n      return elasticConstraint;\n    }\n    if (placement2.includes(\"right\")) {\n      elasticConstraint.right = 1;\n      return elasticConstraint;\n    }\n    if (placement2.includes(\"left\")) {\n      elasticConstraint.left = 1;\n      return elasticConstraint;\n    }\n    elasticConstraint.left = 1;\n    elasticConstraint.right = 1;\n    return elasticConstraint;\n  };\n  let opacityValue = void 0;\n  if (drag && placement === \"bottom-center\" || placement === \"top-center\") {\n    opacityValue = Math.max(0, 1 - dragValue / (SWIPE_THRESHOLD_Y + 5));\n  } else if (drag) {\n    opacityValue = Math.max(0, 1 - dragValue / (SWIPE_THRESHOLD_X + 20));\n  }\n  const getToastProps = useCallback((props2 = {}) => {\n    const aboveToastHeight = index + 1 < total ? heights[index + 1] : 0;\n    const belowToastHeight = index - 1 >= 0 ? heights[index - 1] : 0;\n    const topExtension = aboveToastHeight ? Math.ceil(aboveToastHeight / 2) + 8 : 16;\n    const bottomExtension = belowToastHeight ? Math.ceil(belowToastHeight / 2) + 8 : 16;\n    const pseudoElementStyles = {\n      \"--top-extension\": `${topExtension}px`,\n      \"--bottom-extension\": `${bottomExtension}px`\n    };\n    return {\n      ref: domRef,\n      className: slots.base({\n        class: clsx(baseStyles, classNames == null ? void 0 : classNames.base)\n      }),\n      \"data-has-title\": dataAttr(!isEmpty(title)),\n      \"data-has-description\": dataAttr(!isEmpty(description)),\n      \"data-placement\": placement,\n      \"data-drag-value\": dragValue,\n      \"data-toast\": true,\n      \"aria-label\": \"toast\",\n      \"data-toast-exiting\": dataAttr(isToastExiting),\n      onTransitionEnd: () => {\n        if (isToastExiting) {\n          const updatedHeights = heights;\n          updatedHeights.splice(index, 1);\n          setHeights([...updatedHeights]);\n          state.close(toast.key);\n        }\n      },\n      style: {\n        opacity: opacityValue,\n        ...pseudoElementStyles\n      },\n      ...mergeProps(props2, otherProps, toastProps, hoverProps)\n    };\n  }, [slots, classNames, toastProps, hoverProps, toast, toast.key, opacityValue, isToastExiting, state, toast.key]);\n  const getWrapperProps = useCallback((props2 = {}) => ({\n    className: slots.wrapper({\n      class: classNames == null ? void 0 : classNames.wrapper\n    }),\n    ...props2\n  }), []);\n  const getIconProps = useCallback((props2 = {}) => ({\n    \"aria-label\": \"descriptionIcon\",\n    className: slots.icon({\n      class: classNames == null ? void 0 : classNames.icon\n    }),\n    ...props2\n  }), []);\n  const getLoadingIconProps = useCallback((props2 = {}) => ({\n    className: slots.loadingIcon({\n      class: classNames == null ? void 0 : classNames.loadingIcon\n    }),\n    ...props2\n  }), []);\n  const getContentProps = useCallback((props2 = {}) => ({\n    className: slots.content({\n      class: classNames == null ? void 0 : classNames.content\n    }),\n    ...mergeProps(props2, otherProps, contentProps)\n  }), [contentProps]);\n  const getTitleProps = useCallback((props2 = {}) => ({\n    className: slots.title({\n      class: classNames == null ? void 0 : classNames.title\n    }),\n    ...mergeProps(props2, otherProps, titleProps)\n  }), [titleProps]);\n  const getDescriptionProps = useCallback((props2 = {}) => ({\n    className: slots.description({\n      class: classNames == null ? void 0 : classNames.description\n    }),\n    ...mergeProps(props2, otherProps, descriptionProps)\n  }), [descriptionProps]);\n  const getCloseButtonProps = useCallback((props2 = {}) => ({\n    className: slots.closeButton({\n      class: classNames == null ? void 0 : classNames.closeButton\n    }),\n    \"aria-label\": \"closeButton\",\n    \"data-hidden\": dataAttr(hideCloseButton),\n    ...mergeProps(props2, {\n      onPress: chain(() => {\n        setIsToastExiting(true);\n        setTimeout(() => document.body.focus(), 0);\n      }, onClose)\n    })\n  }), [setIsToastExiting, onClose, state, toast]);\n  const getCloseIconProps = useCallback((props2 = {}) => ({\n    className: slots.closeIcon({\n      class: classNames == null ? void 0 : classNames.closeIcon\n    }),\n    \"aria-label\": \"closeIcon\",\n    ...props2\n  }), []);\n  const getMotionDivProps = useCallback((props2 = {}) => {\n    const comparingValue = isRegionExpanded ? maxVisibleToasts - 1 : Math.min(2, maxVisibleToasts - 1);\n    const isCloseToEnd = total - index - 1 <= comparingValue;\n    const dragDirection = placement === \"bottom-center\" || placement === \"top-center\" ? \"y\" : \"x\";\n    const dragConstraints = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    const dragElastic = getDragElasticConstraints(placement);\n    const animateProps = (() => {\n      if (placement.includes(\"top\")) {\n        return {\n          top: isRegionExpanded || drag ? liftHeight + toastOffset : (total - 1 - index) * 8 + toastOffset,\n          bottom: \"auto\"\n        };\n      } else if (placement.includes(\"bottom\")) {\n        return {\n          bottom: isRegionExpanded || drag ? liftHeight + toastOffset : (total - 1 - index) * 8 + toastOffset,\n          top: \"auto\"\n        };\n      }\n      return {};\n    })();\n    return {\n      animate: {\n        opacity: isCloseToEnd ? 1 : 0,\n        pointerEvents: isCloseToEnd ? \"all\" : \"none\",\n        scaleX: isRegionExpanded || drag ? 1 : 1 - (total - 1 - index) * 0.1,\n        height: isRegionExpanded || drag ? initialHeight : frontHeight,\n        y: 0,\n        ...animateProps\n      },\n      drag: dragDirection,\n      dragConstraints,\n      exit: {\n        opacity: 0\n      },\n      initial: {\n        opacity: 0,\n        scale: 1,\n        y: -40 * multiplier\n      },\n      transition: {\n        duration: 0.3,\n        ease: \"easeOut\"\n      },\n      variants: toastVariants,\n      dragElastic,\n      onDragEnd: (_, info) => {\n        const {\n          x: offsetX,\n          y: offsetY\n        } = info.offset;\n        setDrag(false);\n        if (shouldCloseToast(offsetX, offsetY)) {\n          const updatedHeights = heights;\n          updatedHeights.splice(index, 1);\n          setHeights([...updatedHeights]);\n          state.close(toast.key);\n          return;\n        }\n        setDragValue(0);\n      },\n      onDrag: (_, info) => {\n        let updatedDragValue = 0;\n        if (placement === \"top-center\") {\n          updatedDragValue = -info.offset.y;\n        } else if (placement === \"bottom-center\") {\n          updatedDragValue = info.offset.y;\n        } else if (placement.includes(\"right\")) {\n          updatedDragValue = info.offset.x;\n        } else if (placement.includes(\"left\")) {\n          updatedDragValue = -info.offset.x;\n        }\n        if (updatedDragValue >= 0) {\n          setDragValue(updatedDragValue);\n        }\n      },\n      onDragStart: () => {\n        setDrag(true);\n      },\n      \"data-drag\": dataAttr(drag),\n      \"data-placement\": placement,\n      \"data-drag-value\": dragValue,\n      className: slots.motionDiv({\n        class: classNames == null ? void 0 : classNames.motionDiv\n      }),\n      ...props2,\n      ...motionProps\n    };\n  }, [total, index, placement, isRegionExpanded, isToastExiting, liftHeight, multiplier, initialHeight, frontHeight, toastVariants, classNames, drag, dataAttr, setDrag, shouldCloseToast, slots, toastOffset, maxVisibleToasts]);\n  return {\n    Component,\n    title,\n    description,\n    icon,\n    loadingIcon,\n    domRef,\n    severity,\n    closeIcon,\n    classNames,\n    color: variantProps[\"color\"],\n    hideIcon,\n    placement,\n    state,\n    toast,\n    disableAnimation,\n    isProgressBarVisible: !!timeout,\n    total,\n    index,\n    getWrapperProps,\n    getToastProps,\n    getTitleProps,\n    getContentProps,\n    getDescriptionProps,\n    getCloseButtonProps,\n    getIconProps,\n    getMotionDivProps,\n    getCloseIconProps,\n    getLoadingIconProps,\n    progressBarRef,\n    endContent,\n    slots,\n    isRegionExpanded,\n    liftHeight,\n    frontHeight,\n    initialHeight,\n    isLoading\n  };\n}\nexport { useToast };","map":{"version":3,"names":["mapPropsVariants","useProviderContext","toast","toastTheme","useDOMRef","clsx","dataAttr","isEmpty","objectToDeps","useCallback","useEffect","useLayoutEffect","useMemo","useRef","useState","useToast","useToastAria","chain","mergeProps","useHover","useIsMobile","SWIPE_THRESHOLD_X","SWIPE_THRESHOLD_Y","INITIAL_POSITION","originalProps","_a","_b","props","variantProps","variantKeys","ref","as","title","description","className","classNames","endContent","closeIcon","hideIcon","placement","placementProp","isRegionExpanded","hideCloseButton","state","total","index","heights","promise","promiseProp","setHeights","toastOffset","motionProps","timeout","shouldShowTimeoutProgress","icon","onClose","severity","maxVisibleToasts","otherProps","isHovered","isToastHovered","hoverProps","isDisabled","globalContext","disableAnimation","isMobile","includes","animationRef","startTime","progressRef","progressBarRef","pausedTime","timeElapsed","current","style","width","isLoading","setIsLoading","finally","updateProgress","timestamp","requestAnimationFrame","elapsed","close","key","Math","min","cancelAnimationFrame","Component","loadingIcon","domRef","baseStyles","base","toastProps","contentProps","titleProps","descriptionProps","mounted","setMounted","initialHeight","setInitialHeight","isToastExiting","setIsToastExiting","toastNode","originalHeight","height","computedStyle","getComputedStyle","marginTop","parseFloat","marginBottom","newHeight","getBoundingClientRect","prevHeight","updatedHeights","length","push","liftHeight","idx","frontHeight","slots","multiplier","toastVariants","hidden","opacity","y","visible","exit","drag","setDrag","dragValue","setDragValue","shouldCloseToast","offsetX","offsetY","isRight","isLeft","isCenterTop","isCenterBottom","getDragElasticConstraints","placement2","elasticConstraint","top","bottom","right","left","opacityValue","max","getToastProps","props2","aboveToastHeight","belowToastHeight","topExtension","ceil","bottomExtension","pseudoElementStyles","class","onTransitionEnd","splice","getWrapperProps","wrapper","getIconProps","getLoadingIconProps","getContentProps","content","getTitleProps","getDescriptionProps","getCloseButtonProps","closeButton","onPress","setTimeout","document","body","focus","getCloseIconProps","getMotionDivProps","comparingValue","isCloseToEnd","dragDirection","dragConstraints","dragElastic","animateProps","animate","pointerEvents","scaleX","initial","scale","transition","duration","ease","variants","onDragEnd","_","info","x","offset","onDrag","updatedDragValue","onDragStart","motionDiv","color","isProgressBarVisible"],"sources":["/Users/nathandarma/Documents/App Testing/Diptych/diptych/node_modules/@heroui/toast/dist/chunk-D2JXYZ2A.mjs"],"sourcesContent":["\"use client\";\n\n// src/use-toast.ts\nimport { mapPropsVariants, useProviderContext } from \"@heroui/system\";\nimport { toast as toastTheme } from \"@heroui/theme\";\nimport { useDOMRef } from \"@heroui/react-utils\";\nimport { clsx, dataAttr, isEmpty, objectToDeps } from \"@heroui/shared-utils\";\nimport { useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState } from \"react\";\nimport { useToast as useToastAria } from \"@react-aria/toast\";\nimport { chain, mergeProps } from \"@react-aria/utils\";\nimport { useHover } from \"@react-aria/interactions\";\nimport { useIsMobile } from \"@heroui/use-is-mobile\";\nvar SWIPE_THRESHOLD_X = 100;\nvar SWIPE_THRESHOLD_Y = 20;\nvar INITIAL_POSITION = 50;\nfunction useToast(originalProps) {\n  var _a, _b;\n  const [props, variantProps] = mapPropsVariants(originalProps, toastTheme.variantKeys);\n  const {\n    ref,\n    as,\n    title,\n    description,\n    className,\n    classNames,\n    toast,\n    endContent,\n    closeIcon,\n    hideIcon = false,\n    placement: placementProp = \"bottom-right\",\n    isRegionExpanded,\n    hideCloseButton = false,\n    state,\n    total = 1,\n    index = 0,\n    heights,\n    promise: promiseProp,\n    setHeights,\n    toastOffset = 0,\n    motionProps,\n    timeout = 6e3,\n    shouldShowTimeoutProgress = false,\n    icon,\n    onClose,\n    severity,\n    maxVisibleToasts,\n    ...otherProps\n  } = props;\n  const { isHovered: isToastHovered, hoverProps } = useHover({\n    isDisabled: false\n  });\n  const globalContext = useProviderContext();\n  const disableAnimation = (_b = (_a = originalProps == null ? void 0 : originalProps.disableAnimation) != null ? _a : globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _b : false;\n  const isMobile = useIsMobile();\n  let placement = placementProp;\n  if (isMobile) {\n    if (placementProp.includes(\"top\")) {\n      placement = \"top-center\";\n    } else {\n      placement = \"bottom-center\";\n    }\n  }\n  const animationRef = useRef(null);\n  const startTime = useRef(null);\n  const progressRef = useRef(0);\n  const progressBarRef = useRef(null);\n  const pausedTime = useRef(0);\n  const timeElapsed = useRef(0);\n  useEffect(() => {\n    if (progressBarRef.current) {\n      progressBarRef.current.style.width = \"0%\";\n    }\n  }, []);\n  const [isLoading, setIsLoading] = useState(!!promiseProp);\n  useEffect(() => {\n    if (!promiseProp) return;\n    promiseProp.finally(() => {\n      setIsLoading(false);\n    });\n  }, [promiseProp]);\n  useEffect(() => {\n    const updateProgress = (timestamp) => {\n      if (!timeout || isLoading) {\n        return;\n      }\n      if (startTime.current === null) {\n        startTime.current = timestamp;\n      }\n      if (isToastHovered || isRegionExpanded || index != total - 1) {\n        pausedTime.current += timestamp - startTime.current;\n        startTime.current = null;\n        animationRef.current = requestAnimationFrame(updateProgress);\n        return;\n      }\n      const elapsed = timestamp - startTime.current + pausedTime.current;\n      timeElapsed.current = elapsed;\n      if (timeElapsed.current >= timeout) {\n        state.close(toast.key);\n      }\n      progressRef.current = Math.min(elapsed / timeout * 100, 100);\n      if (progressBarRef.current) {\n        progressBarRef.current.style.width = `${shouldShowTimeoutProgress ? progressRef.current : 0}%`;\n      }\n      if (progressRef.current < 100) {\n        animationRef.current = requestAnimationFrame(updateProgress);\n      }\n    };\n    animationRef.current = requestAnimationFrame(updateProgress);\n    return () => {\n      if (animationRef.current !== null) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, [\n    timeout,\n    shouldShowTimeoutProgress,\n    state,\n    isToastHovered,\n    index,\n    total,\n    isRegionExpanded,\n    isLoading\n  ]);\n  const Component = as || \"div\";\n  const loadingIcon = icon;\n  const domRef = useDOMRef(ref);\n  const baseStyles = clsx(className, classNames == null ? void 0 : classNames.base);\n  const { toastProps, contentProps, titleProps, descriptionProps } = useToastAria(\n    props,\n    state,\n    domRef\n  );\n  const [mounted, setMounted] = useState(false);\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n  const [initialHeight, setInitialHeight] = useState(0);\n  const [isToastExiting, setIsToastExiting] = useState(false);\n  useLayoutEffect(() => {\n    if (!domRef.current || !mounted || isToastExiting) {\n      return;\n    }\n    const toastNode = domRef.current;\n    const originalHeight = toastNode.style.height;\n    toastNode.style.height = \"auto\";\n    const computedStyle = getComputedStyle(toastNode);\n    const marginTop = parseFloat(computedStyle.marginTop);\n    const marginBottom = parseFloat(computedStyle.marginBottom);\n    const newHeight = toastNode.getBoundingClientRect().height + marginTop + marginBottom;\n    toastNode.style.height = originalHeight;\n    setInitialHeight((prevHeight) => prevHeight !== newHeight ? newHeight : prevHeight);\n    const updatedHeights = [...heights];\n    if (updatedHeights.length > index) {\n      updatedHeights[index] = newHeight;\n    } else {\n      updatedHeights.push(newHeight);\n    }\n    setHeights(updatedHeights);\n  }, [mounted, total, setHeights, index, isToastExiting]);\n  let liftHeight = 4;\n  for (let idx = index + 1; idx < total; idx++) {\n    liftHeight += heights[idx];\n  }\n  const frontHeight = heights[heights.length - 1];\n  const slots = useMemo(\n    () => toastTheme({\n      ...variantProps,\n      disableAnimation\n    }),\n    [objectToDeps(variantProps)]\n  );\n  const multiplier = placement.includes(\"top\") ? 1 : -1;\n  const toastVariants = {\n    hidden: { opacity: 0, y: -INITIAL_POSITION * multiplier },\n    visible: { opacity: 1, y: 0 },\n    exit: { opacity: 0, y: -INITIAL_POSITION * multiplier }\n  };\n  const [drag, setDrag] = useState(false);\n  const [dragValue, setDragValue] = useState(0);\n  const shouldCloseToast = (offsetX, offsetY) => {\n    const isRight = placement.includes(\"right\");\n    const isLeft = placement.includes(\"left\");\n    const isCenterTop = placement === \"top-center\";\n    const isCenterBottom = placement === \"bottom-center\";\n    if (isRight && offsetX >= SWIPE_THRESHOLD_X || isLeft && offsetX <= -SWIPE_THRESHOLD_X || isCenterTop && offsetY <= -SWIPE_THRESHOLD_Y || isCenterBottom && offsetY >= SWIPE_THRESHOLD_Y) {\n      return true;\n    }\n  };\n  const getDragElasticConstraints = (placement2) => {\n    const elasticConstraint = { top: 0, bottom: 0, right: 0, left: 0 };\n    if (placement2 === \"bottom-center\") {\n      elasticConstraint.bottom = 1;\n      return elasticConstraint;\n    }\n    if (placement2 === \"top-center\") {\n      elasticConstraint.top = 1;\n      return elasticConstraint;\n    }\n    if (placement2.includes(\"right\")) {\n      elasticConstraint.right = 1;\n      return elasticConstraint;\n    }\n    if (placement2.includes(\"left\")) {\n      elasticConstraint.left = 1;\n      return elasticConstraint;\n    }\n    elasticConstraint.left = 1;\n    elasticConstraint.right = 1;\n    return elasticConstraint;\n  };\n  let opacityValue = void 0;\n  if (drag && placement === \"bottom-center\" || placement === \"top-center\") {\n    opacityValue = Math.max(0, 1 - dragValue / (SWIPE_THRESHOLD_Y + 5));\n  } else if (drag) {\n    opacityValue = Math.max(0, 1 - dragValue / (SWIPE_THRESHOLD_X + 20));\n  }\n  const getToastProps = useCallback(\n    (props2 = {}) => {\n      const aboveToastHeight = index + 1 < total ? heights[index + 1] : 0;\n      const belowToastHeight = index - 1 >= 0 ? heights[index - 1] : 0;\n      const topExtension = aboveToastHeight ? Math.ceil(aboveToastHeight / 2) + 8 : 16;\n      const bottomExtension = belowToastHeight ? Math.ceil(belowToastHeight / 2) + 8 : 16;\n      const pseudoElementStyles = {\n        \"--top-extension\": `${topExtension}px`,\n        \"--bottom-extension\": `${bottomExtension}px`\n      };\n      return {\n        ref: domRef,\n        className: slots.base({ class: clsx(baseStyles, classNames == null ? void 0 : classNames.base) }),\n        \"data-has-title\": dataAttr(!isEmpty(title)),\n        \"data-has-description\": dataAttr(!isEmpty(description)),\n        \"data-placement\": placement,\n        \"data-drag-value\": dragValue,\n        \"data-toast\": true,\n        \"aria-label\": \"toast\",\n        \"data-toast-exiting\": dataAttr(isToastExiting),\n        onTransitionEnd: () => {\n          if (isToastExiting) {\n            const updatedHeights = heights;\n            updatedHeights.splice(index, 1);\n            setHeights([...updatedHeights]);\n            state.close(toast.key);\n          }\n        },\n        style: {\n          opacity: opacityValue,\n          ...pseudoElementStyles\n        },\n        ...mergeProps(props2, otherProps, toastProps, hoverProps)\n      };\n    },\n    [\n      slots,\n      classNames,\n      toastProps,\n      hoverProps,\n      toast,\n      toast.key,\n      opacityValue,\n      isToastExiting,\n      state,\n      toast.key\n    ]\n  );\n  const getWrapperProps = useCallback(\n    (props2 = {}) => ({\n      className: slots.wrapper({ class: classNames == null ? void 0 : classNames.wrapper }),\n      ...props2\n    }),\n    []\n  );\n  const getIconProps = useCallback(\n    (props2 = {}) => ({\n      \"aria-label\": \"descriptionIcon\",\n      className: slots.icon({ class: classNames == null ? void 0 : classNames.icon }),\n      ...props2\n    }),\n    []\n  );\n  const getLoadingIconProps = useCallback(\n    (props2 = {}) => ({\n      className: slots.loadingIcon({ class: classNames == null ? void 0 : classNames.loadingIcon }),\n      ...props2\n    }),\n    []\n  );\n  const getContentProps = useCallback(\n    (props2 = {}) => ({\n      className: slots.content({ class: classNames == null ? void 0 : classNames.content }),\n      ...mergeProps(props2, otherProps, contentProps)\n    }),\n    [contentProps]\n  );\n  const getTitleProps = useCallback(\n    (props2 = {}) => ({\n      className: slots.title({ class: classNames == null ? void 0 : classNames.title }),\n      ...mergeProps(props2, otherProps, titleProps)\n    }),\n    [titleProps]\n  );\n  const getDescriptionProps = useCallback(\n    (props2 = {}) => ({\n      className: slots.description({ class: classNames == null ? void 0 : classNames.description }),\n      ...mergeProps(props2, otherProps, descriptionProps)\n    }),\n    [descriptionProps]\n  );\n  const getCloseButtonProps = useCallback(\n    (props2 = {}) => ({\n      className: slots.closeButton({ class: classNames == null ? void 0 : classNames.closeButton }),\n      \"aria-label\": \"closeButton\",\n      \"data-hidden\": dataAttr(hideCloseButton),\n      ...mergeProps(props2, {\n        onPress: chain(() => {\n          setIsToastExiting(true);\n          setTimeout(() => document.body.focus(), 0);\n        }, onClose)\n      })\n    }),\n    [setIsToastExiting, onClose, state, toast]\n  );\n  const getCloseIconProps = useCallback(\n    (props2 = {}) => ({\n      className: slots.closeIcon({ class: classNames == null ? void 0 : classNames.closeIcon }),\n      \"aria-label\": \"closeIcon\",\n      ...props2\n    }),\n    []\n  );\n  const getMotionDivProps = useCallback(\n    (props2 = {}) => {\n      const comparingValue = isRegionExpanded ? maxVisibleToasts - 1 : Math.min(2, maxVisibleToasts - 1);\n      const isCloseToEnd = total - index - 1 <= comparingValue;\n      const dragDirection = placement === \"bottom-center\" || placement === \"top-center\" ? \"y\" : \"x\";\n      const dragConstraints = { left: 0, right: 0, top: 0, bottom: 0 };\n      const dragElastic = getDragElasticConstraints(placement);\n      const animateProps = (() => {\n        if (placement.includes(\"top\")) {\n          return {\n            top: isRegionExpanded || drag ? liftHeight + toastOffset : (total - 1 - index) * 8 + toastOffset,\n            bottom: \"auto\"\n          };\n        } else if (placement.includes(\"bottom\")) {\n          return {\n            bottom: isRegionExpanded || drag ? liftHeight + toastOffset : (total - 1 - index) * 8 + toastOffset,\n            top: \"auto\"\n          };\n        }\n        return {};\n      })();\n      return {\n        animate: {\n          opacity: isCloseToEnd ? 1 : 0,\n          pointerEvents: isCloseToEnd ? \"all\" : \"none\",\n          scaleX: isRegionExpanded || drag ? 1 : 1 - (total - 1 - index) * 0.1,\n          height: isRegionExpanded || drag ? initialHeight : frontHeight,\n          y: 0,\n          ...animateProps\n        },\n        drag: dragDirection,\n        dragConstraints,\n        exit: { opacity: 0 },\n        initial: { opacity: 0, scale: 1, y: -40 * multiplier },\n        transition: { duration: 0.3, ease: \"easeOut\" },\n        variants: toastVariants,\n        dragElastic,\n        onDragEnd: (_, info) => {\n          const { x: offsetX, y: offsetY } = info.offset;\n          setDrag(false);\n          if (shouldCloseToast(offsetX, offsetY)) {\n            const updatedHeights = heights;\n            updatedHeights.splice(index, 1);\n            setHeights([...updatedHeights]);\n            state.close(toast.key);\n            return;\n          }\n          setDragValue(0);\n        },\n        onDrag: (_, info) => {\n          let updatedDragValue = 0;\n          if (placement === \"top-center\") {\n            updatedDragValue = -info.offset.y;\n          } else if (placement === \"bottom-center\") {\n            updatedDragValue = info.offset.y;\n          } else if (placement.includes(\"right\")) {\n            updatedDragValue = info.offset.x;\n          } else if (placement.includes(\"left\")) {\n            updatedDragValue = -info.offset.x;\n          }\n          if (updatedDragValue >= 0) {\n            setDragValue(updatedDragValue);\n          }\n        },\n        onDragStart: () => {\n          setDrag(true);\n        },\n        \"data-drag\": dataAttr(drag),\n        \"data-placement\": placement,\n        \"data-drag-value\": dragValue,\n        className: slots.motionDiv({ class: classNames == null ? void 0 : classNames.motionDiv }),\n        ...props2,\n        ...motionProps\n      };\n    },\n    [\n      total,\n      index,\n      placement,\n      isRegionExpanded,\n      isToastExiting,\n      liftHeight,\n      multiplier,\n      initialHeight,\n      frontHeight,\n      toastVariants,\n      classNames,\n      drag,\n      dataAttr,\n      setDrag,\n      shouldCloseToast,\n      slots,\n      toastOffset,\n      maxVisibleToasts\n    ]\n  );\n  return {\n    Component,\n    title,\n    description,\n    icon,\n    loadingIcon,\n    domRef,\n    severity,\n    closeIcon,\n    classNames,\n    color: variantProps[\"color\"],\n    hideIcon,\n    placement,\n    state,\n    toast,\n    disableAnimation,\n    isProgressBarVisible: !!timeout,\n    total,\n    index,\n    getWrapperProps,\n    getToastProps,\n    getTitleProps,\n    getContentProps,\n    getDescriptionProps,\n    getCloseButtonProps,\n    getIconProps,\n    getMotionDivProps,\n    getCloseIconProps,\n    getLoadingIconProps,\n    progressBarRef,\n    endContent,\n    slots,\n    isRegionExpanded,\n    liftHeight,\n    frontHeight,\n    initialHeight,\n    isLoading\n  };\n}\n\nexport {\n  useToast\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}