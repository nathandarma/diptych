{"ast":null,"code":"\"use client\";\n\nimport { useInput } from \"./chunk-K6DFORPN.mjs\";\n\n// src/textarea.tsx\nimport { dataAttr } from \"@heroui/shared-utils\";\nimport { forwardRef } from \"@heroui/system\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { useMemo, useState } from \"react\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { CloseFilledIcon } from \"@heroui/shared-icons\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar Textarea = forwardRef(({\n  style,\n  minRows = 3,\n  maxRows = 8,\n  cacheMeasurements = false,\n  disableAutosize = false,\n  onHeightChange,\n  ...otherProps\n}, ref) => {\n  const {\n    Component,\n    label,\n    description,\n    startContent,\n    endContent,\n    hasHelper,\n    shouldLabelBeOutside,\n    shouldLabelBeInside,\n    isInvalid,\n    errorMessage,\n    getBaseProps,\n    getLabelProps,\n    getInputProps,\n    getInnerWrapperProps,\n    getInputWrapperProps,\n    getHelperWrapperProps,\n    getDescriptionProps,\n    getErrorMessageProps,\n    isClearable,\n    getClearButtonProps\n  } = useInput({\n    ...otherProps,\n    ref,\n    isMultiline: true\n  });\n  const [hasMultipleRows, setIsHasMultipleRows] = useState(minRows > 1);\n  const [isLimitReached, setIsLimitReached] = useState(false);\n  const labelContent = label ? /* @__PURE__ */jsx(\"label\", {\n    ...getLabelProps(),\n    children: label\n  }) : null;\n  const inputProps = getInputProps();\n  const handleHeightChange = (height, meta) => {\n    if (minRows === 1) {\n      setIsHasMultipleRows(height >= meta.rowHeight * 2);\n    }\n    if (maxRows > minRows) {\n      const limitReached = height >= maxRows * meta.rowHeight;\n      setIsLimitReached(limitReached);\n    }\n    onHeightChange == null ? void 0 : onHeightChange(height, meta);\n  };\n  const content = disableAutosize ? /* @__PURE__ */jsx(\"textarea\", {\n    ...inputProps,\n    style: mergeProps(inputProps.style, style != null ? style : {})\n  }) : /* @__PURE__ */jsx(TextareaAutosize, {\n    ...inputProps,\n    cacheMeasurements,\n    \"data-hide-scroll\": dataAttr(!isLimitReached),\n    maxRows,\n    minRows,\n    style: mergeProps(inputProps.style, style != null ? style : {}),\n    onHeightChange: handleHeightChange\n  });\n  const clearButtonContent = useMemo(() => {\n    return isClearable ? /* @__PURE__ */jsx(\"button\", {\n      ...getClearButtonProps(),\n      children: /* @__PURE__ */jsx(CloseFilledIcon, {})\n    }) : null;\n  }, [isClearable, getClearButtonProps]);\n  const innerWrapper = useMemo(() => {\n    if (startContent || endContent) {\n      return /* @__PURE__ */jsxs(\"div\", {\n        ...getInnerWrapperProps(),\n        children: [startContent, content, endContent]\n      });\n    }\n    return /* @__PURE__ */jsx(\"div\", {\n      ...getInnerWrapperProps(),\n      children: content\n    });\n  }, [startContent, inputProps, endContent, getInnerWrapperProps]);\n  const shouldShowError = isInvalid && errorMessage;\n  const hasHelperContent = shouldShowError || description;\n  return /* @__PURE__ */jsxs(Component, {\n    ...getBaseProps(),\n    children: [shouldLabelBeOutside ? labelContent : null, /* @__PURE__ */jsxs(\"div\", {\n      ...getInputWrapperProps(),\n      \"data-has-multiple-rows\": dataAttr(hasMultipleRows),\n      children: [shouldLabelBeInside ? labelContent : null, innerWrapper, clearButtonContent]\n    }), hasHelper && hasHelperContent ? /* @__PURE__ */jsx(\"div\", {\n      ...getHelperWrapperProps(),\n      children: shouldShowError ? /* @__PURE__ */jsx(\"div\", {\n        ...getErrorMessageProps(),\n        children: errorMessage\n      }) : /* @__PURE__ */jsx(\"div\", {\n        ...getDescriptionProps(),\n        children: description\n      })\n    }) : null]\n  });\n});\nTextarea.displayName = \"HeroUI.Textarea\";\nvar textarea_default = Textarea;\nexport { textarea_default };","map":{"version":3,"names":["useInput","dataAttr","forwardRef","mergeProps","useMemo","useState","TextareaAutosize","CloseFilledIcon","jsx","jsxs","Textarea","style","minRows","maxRows","cacheMeasurements","disableAutosize","onHeightChange","otherProps","ref","Component","label","description","startContent","endContent","hasHelper","shouldLabelBeOutside","shouldLabelBeInside","isInvalid","errorMessage","getBaseProps","getLabelProps","getInputProps","getInnerWrapperProps","getInputWrapperProps","getHelperWrapperProps","getDescriptionProps","getErrorMessageProps","isClearable","getClearButtonProps","isMultiline","hasMultipleRows","setIsHasMultipleRows","isLimitReached","setIsLimitReached","labelContent","children","inputProps","handleHeightChange","height","meta","rowHeight","limitReached","content","clearButtonContent","innerWrapper","shouldShowError","hasHelperContent","displayName","textarea_default"],"sources":["/Users/nathandarma/Documents/App Testing/Diptych/diptych/node_modules/@heroui/input/dist/chunk-ORPGD37S.mjs"],"sourcesContent":["\"use client\";\nimport {\n  useInput\n} from \"./chunk-K6DFORPN.mjs\";\n\n// src/textarea.tsx\nimport { dataAttr } from \"@heroui/shared-utils\";\nimport { forwardRef } from \"@heroui/system\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { useMemo, useState } from \"react\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { CloseFilledIcon } from \"@heroui/shared-icons\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar Textarea = forwardRef(\n  ({\n    style,\n    minRows = 3,\n    maxRows = 8,\n    cacheMeasurements = false,\n    disableAutosize = false,\n    onHeightChange,\n    ...otherProps\n  }, ref) => {\n    const {\n      Component,\n      label,\n      description,\n      startContent,\n      endContent,\n      hasHelper,\n      shouldLabelBeOutside,\n      shouldLabelBeInside,\n      isInvalid,\n      errorMessage,\n      getBaseProps,\n      getLabelProps,\n      getInputProps,\n      getInnerWrapperProps,\n      getInputWrapperProps,\n      getHelperWrapperProps,\n      getDescriptionProps,\n      getErrorMessageProps,\n      isClearable,\n      getClearButtonProps\n    } = useInput({ ...otherProps, ref, isMultiline: true });\n    const [hasMultipleRows, setIsHasMultipleRows] = useState(minRows > 1);\n    const [isLimitReached, setIsLimitReached] = useState(false);\n    const labelContent = label ? /* @__PURE__ */ jsx(\"label\", { ...getLabelProps(), children: label }) : null;\n    const inputProps = getInputProps();\n    const handleHeightChange = (height, meta) => {\n      if (minRows === 1) {\n        setIsHasMultipleRows(height >= meta.rowHeight * 2);\n      }\n      if (maxRows > minRows) {\n        const limitReached = height >= maxRows * meta.rowHeight;\n        setIsLimitReached(limitReached);\n      }\n      onHeightChange == null ? void 0 : onHeightChange(height, meta);\n    };\n    const content = disableAutosize ? /* @__PURE__ */ jsx(\"textarea\", { ...inputProps, style: mergeProps(inputProps.style, style != null ? style : {}) }) : /* @__PURE__ */ jsx(\n      TextareaAutosize,\n      {\n        ...inputProps,\n        cacheMeasurements,\n        \"data-hide-scroll\": dataAttr(!isLimitReached),\n        maxRows,\n        minRows,\n        style: mergeProps(inputProps.style, style != null ? style : {}),\n        onHeightChange: handleHeightChange\n      }\n    );\n    const clearButtonContent = useMemo(() => {\n      return isClearable ? /* @__PURE__ */ jsx(\"button\", { ...getClearButtonProps(), children: /* @__PURE__ */ jsx(CloseFilledIcon, {}) }) : null;\n    }, [isClearable, getClearButtonProps]);\n    const innerWrapper = useMemo(() => {\n      if (startContent || endContent) {\n        return /* @__PURE__ */ jsxs(\"div\", { ...getInnerWrapperProps(), children: [\n          startContent,\n          content,\n          endContent\n        ] });\n      }\n      return /* @__PURE__ */ jsx(\"div\", { ...getInnerWrapperProps(), children: content });\n    }, [startContent, inputProps, endContent, getInnerWrapperProps]);\n    const shouldShowError = isInvalid && errorMessage;\n    const hasHelperContent = shouldShowError || description;\n    return /* @__PURE__ */ jsxs(Component, { ...getBaseProps(), children: [\n      shouldLabelBeOutside ? labelContent : null,\n      /* @__PURE__ */ jsxs(\"div\", { ...getInputWrapperProps(), \"data-has-multiple-rows\": dataAttr(hasMultipleRows), children: [\n        shouldLabelBeInside ? labelContent : null,\n        innerWrapper,\n        clearButtonContent\n      ] }),\n      hasHelper && hasHelperContent ? /* @__PURE__ */ jsx(\"div\", { ...getHelperWrapperProps(), children: shouldShowError ? /* @__PURE__ */ jsx(\"div\", { ...getErrorMessageProps(), children: errorMessage }) : /* @__PURE__ */ jsx(\"div\", { ...getDescriptionProps(), children: description }) }) : null\n    ] });\n  }\n);\nTextarea.displayName = \"HeroUI.Textarea\";\nvar textarea_default = Textarea;\n\nexport {\n  textarea_default\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}