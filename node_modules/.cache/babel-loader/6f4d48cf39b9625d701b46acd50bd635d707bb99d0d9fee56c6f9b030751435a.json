{"ast":null,"code":"import $7WpW4$intlStringsmodulejs from \"./intlStrings.mjs\";\nimport { useId as $7WpW4$useId, useSlotId as $7WpW4$useSlotId, filterDOMProps as $7WpW4$filterDOMProps } from \"@react-aria/utils\";\nimport { useEffect as $7WpW4$useEffect, useState as $7WpW4$useState } from \"react\";\nimport { useLocalizedStringFormatter as $7WpW4$useLocalizedStringFormatter } from \"@react-aria/i18n\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $d6542812f0669241$export$a407b657d3044108(props, state, ref) {\n  let {\n    key: key,\n    timer: timer,\n    timeout: timeout\n  } = props.toast;\n  (0, $7WpW4$useEffect)(() => {\n    if (timer == null || timeout == null) return;\n    timer.reset(timeout);\n    return () => {\n      timer.pause();\n    };\n  }, [timer, timeout]);\n  let titleId = (0, $7WpW4$useId)();\n  let descriptionId = (0, $7WpW4$useSlotId)();\n  let stringFormatter = (0, $7WpW4$useLocalizedStringFormatter)((0, $parcel$interopDefault($7WpW4$intlStringsmodulejs)), '@react-aria/toast');\n  // This is required for NVDA announcements, without it NVDA will NOT announce the toast when it appears.\n  // Originally was tied to animationStart/End via https://github.com/adobe/react-spectrum/pull/6223/commits/e22e319df64958e822ab7cd9685e96818cae9ba5\n  // but toasts don't always have animations.\n  let [isVisible, setIsVisible] = (0, $7WpW4$useState)(false);\n  (0, $7WpW4$useEffect)(() => {\n    setIsVisible(true);\n  }, []);\n  let toastProps = (0, $7WpW4$filterDOMProps)(props, {\n    labelable: true\n  });\n  return {\n    toastProps: {\n      ...toastProps,\n      role: 'alertdialog',\n      'aria-modal': 'false',\n      'aria-labelledby': props['aria-labelledby'] || titleId,\n      'aria-describedby': props['aria-describedby'] || descriptionId,\n      tabIndex: 0\n    },\n    contentProps: {\n      role: 'alert',\n      'aria-atomic': 'true',\n      'aria-hidden': isVisible ? undefined : 'true'\n    },\n    titleProps: {\n      id: titleId\n    },\n    descriptionProps: {\n      id: descriptionId\n    },\n    closeButtonProps: {\n      'aria-label': stringFormatter.format('close'),\n      onPress: () => state.close(key)\n    }\n  };\n}\nexport { $d6542812f0669241$export$a407b657d3044108 as useToast };","map":{"version":3,"names":["$d6542812f0669241$export$a407b657d3044108","props","state","ref","key","timer","timeout","toast","$7WpW4$useEffect","reset","pause","titleId","$7WpW4$useId","descriptionId","$7WpW4$useSlotId","stringFormatter","$7WpW4$useLocalizedStringFormatter","$parcel$interopDefault","$7WpW4$intlStringsmodulejs","isVisible","setIsVisible","$7WpW4$useState","toastProps","$7WpW4$filterDOMProps","labelable","role","tabIndex","contentProps","undefined","titleProps","id","descriptionProps","closeButtonProps","format","onPress","close"],"sources":["/Users/nathandarma/Documents/App Testing/Diptych/diptych/node_modules/@react-aria/toast/dist/packages/@react-aria/toast/src/useToast.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaButtonProps} from '@react-types/button';\nimport {AriaLabelingProps, DOMAttributes, FocusableElement, RefObject} from '@react-types/shared';\nimport {filterDOMProps, useId, useSlotId} from '@react-aria/utils';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {QueuedToast, ToastState} from '@react-stately/toast';\nimport {useEffect, useState} from 'react';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\n\nexport interface AriaToastProps<T> extends AriaLabelingProps {\n  /** The toast object. */\n  toast: QueuedToast<T>\n}\n\nexport interface ToastAria {\n  /** Props for the toast container, non-modal dialog element. */\n  toastProps: DOMAttributes,\n  /** Props for the toast content alert message. */\n  contentProps: DOMAttributes,\n  /** Props for the toast title element. */\n  titleProps: DOMAttributes,\n  /** Props for the toast description element, if any. */\n  descriptionProps: DOMAttributes,\n  /** Props for the toast close button. */\n  closeButtonProps: AriaButtonProps\n}\n\n/**\n * Provides the behavior and accessibility implementation for a toast component.\n * Toasts display brief, temporary notifications of actions, errors, or other events in an application.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function useToast<T>(props: AriaToastProps<T>, state: ToastState<T>, ref: RefObject<FocusableElement | null>): ToastAria {\n  let {\n    key,\n    timer,\n    timeout\n  } = props.toast;\n\n  useEffect(() => {\n    if (timer == null || timeout == null) {\n      return;\n    }\n\n    timer.reset(timeout);\n    return () => {\n      timer.pause();\n    };\n  }, [timer, timeout]);\n\n  let titleId = useId();\n  let descriptionId = useSlotId();\n  let stringFormatter = useLocalizedStringFormatter(intlMessages, '@react-aria/toast');\n\n  // This is required for NVDA announcements, without it NVDA will NOT announce the toast when it appears.\n  // Originally was tied to animationStart/End via https://github.com/adobe/react-spectrum/pull/6223/commits/e22e319df64958e822ab7cd9685e96818cae9ba5\n  // but toasts don't always have animations.\n  let [isVisible, setIsVisible] = useState(false);\n  useEffect(() => {\n    setIsVisible(true);\n  }, []);\n\n  let toastProps = filterDOMProps(props, {labelable: true});\n\n  return {\n    toastProps: {\n      ...toastProps,\n      role: 'alertdialog',\n      'aria-modal': 'false',\n      'aria-labelledby': props['aria-labelledby'] || titleId,\n      'aria-describedby': props['aria-describedby'] || descriptionId,\n      tabIndex: 0\n    },\n    contentProps: {\n      role: 'alert',\n      'aria-atomic': 'true',\n      'aria-hidden': isVisible ? undefined : 'true'\n    },\n    titleProps: {\n      id: titleId\n    },\n    descriptionProps: {\n      id: descriptionId\n    },\n    closeButtonProps: {\n      'aria-label': stringFormatter.format('close'),\n      onPress: () => state.close(key)\n    }\n  };\n}\n"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;AA4CO,SAASA,0CAAYC,KAAwB,EAAEC,KAAoB,EAAEC,GAAuC;EACjH,IAAI;IAAAC,GAAA,EACFA,GAAG;IAAAC,KAAA,EACHA,KAAK;IAAAC,OAAA,EACLA;EAAO,CACR,GAAGL,KAAA,CAAMM,KAAK;EAEf,IAAAC,gBAAQ,EAAE;IACR,IAAIH,KAAA,IAAS,QAAQC,OAAA,IAAW,MAC9B;IAGFD,KAAA,CAAMI,KAAK,CAACH,OAAA;IACZ,OAAO;MACLD,KAAA,CAAMK,KAAK;IACb;EACF,GAAG,CAACL,KAAA,EAAOC,OAAA,CAAQ;EAEnB,IAAIK,OAAA,GAAU,IAAAC,YAAI;EAClB,IAAIC,aAAA,GAAgB,IAAAC,gBAAQ;EAC5B,IAAIC,eAAA,GAAkB,IAAAC,kCAA0B,GAAE,GAAAC,sBAAA,CAAAC,0BAAA,CAAW,GAAG;EAEhE;EACA;EACA;EACA,IAAI,CAACC,SAAA,EAAWC,YAAA,CAAa,GAAG,IAAAC,eAAO,EAAE;EACzC,IAAAb,gBAAQ,EAAE;IACRY,YAAA,CAAa;EACf,GAAG,EAAE;EAEL,IAAIE,UAAA,GAAa,IAAAC,qBAAa,EAAEtB,KAAA,EAAO;IAACuB,SAAA,EAAW;EAAI;EAEvD,OAAO;IACLF,UAAA,EAAY;MACV,GAAGA,UAAU;MACbG,IAAA,EAAM;MACN,cAAc;MACd,mBAAmBxB,KAAK,CAAC,kBAAkB,IAAIU,OAAA;MAC/C,oBAAoBV,KAAK,CAAC,mBAAmB,IAAIY,aAAA;MACjDa,QAAA,EAAU;IACZ;IACAC,YAAA,EAAc;MACZF,IAAA,EAAM;MACN,eAAe;MACf,eAAeN,SAAA,GAAYS,SAAA,GAAY;IACzC;IACAC,UAAA,EAAY;MACVC,EAAA,EAAInB;IACN;IACAoB,gBAAA,EAAkB;MAChBD,EAAA,EAAIjB;IACN;IACAmB,gBAAA,EAAkB;MAChB,cAAcjB,eAAA,CAAgBkB,MAAM,CAAC;MACrCC,OAAA,EAASA,CAAA,KAAMhC,KAAA,CAAMiC,KAAK,CAAC/B,GAAA;IAC7B;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}