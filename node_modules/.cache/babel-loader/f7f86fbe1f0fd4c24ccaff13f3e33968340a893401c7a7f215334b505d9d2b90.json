{"ast":null,"code":"\"use client\";\n\n// src/use-drawer.ts\nimport { drawer } from \"@heroui/theme\";\nimport { useDOMRef } from \"@heroui/react-utils\";\nimport { useCallback, useMemo } from \"react\";\nimport { TRANSITION_EASINGS } from \"@heroui/framer-utils\";\nimport { clsx, isEmpty } from \"@heroui/shared-utils\";\nfunction useDrawer(originalProps) {\n  const {\n    ref,\n    className,\n    classNames,\n    placement = \"right\",\n    scrollBehavior = \"inside\",\n    size = \"md\",\n    motionProps: drawerMotionProps,\n    ...otherProps\n  } = originalProps;\n  const domRef = useDOMRef(ref);\n  const motionProps = useMemo(() => {\n    if (!isEmpty(drawerMotionProps)) return drawerMotionProps;\n    const key = placement === \"left\" || placement === \"right\" ? \"x\" : \"y\";\n    return {\n      variants: {\n        enter: {\n          [key]: 0,\n          transition: {\n            [key]: {\n              duration: 0.2,\n              ease: TRANSITION_EASINGS.easeOut\n            }\n          }\n        },\n        exit: {\n          [key]: placement === \"top\" || placement === \"left\" ? \"-100%\" : \"100%\",\n          transition: {\n            [key]: {\n              duration: 0.1,\n              ease: TRANSITION_EASINGS.easeIn\n            }\n          }\n        }\n      }\n    };\n  }, [placement, drawerMotionProps]);\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  const slots = useMemo(() => drawer({\n    size,\n    placement\n  }), [size, placement]);\n  const getModalProps = useCallback(() => {\n    return {\n      classNames: {\n        ...classNames,\n        base: slots.base({\n          class: baseStyles\n        })\n      },\n      motionProps,\n      scrollBehavior,\n      size,\n      ...otherProps\n    };\n  }, [baseStyles, classNames, motionProps, scrollBehavior, size, otherProps]);\n  return {\n    domRef,\n    getModalProps\n  };\n}\nexport { useDrawer };","map":{"version":3,"names":["drawer","useDOMRef","useCallback","useMemo","TRANSITION_EASINGS","clsx","isEmpty","useDrawer","originalProps","ref","className","classNames","placement","scrollBehavior","size","motionProps","drawerMotionProps","otherProps","domRef","key","variants","enter","transition","duration","ease","easeOut","exit","easeIn","baseStyles","base","slots","getModalProps","class"],"sources":["/Users/nathandarma/Documents/App Testing/Diptych/diptych/node_modules/@heroui/drawer/dist/chunk-DULHZX7T.mjs"],"sourcesContent":["\"use client\";\n\n// src/use-drawer.ts\nimport { drawer } from \"@heroui/theme\";\nimport { useDOMRef } from \"@heroui/react-utils\";\nimport { useCallback, useMemo } from \"react\";\nimport { TRANSITION_EASINGS } from \"@heroui/framer-utils\";\nimport { clsx, isEmpty } from \"@heroui/shared-utils\";\nfunction useDrawer(originalProps) {\n  const {\n    ref,\n    className,\n    classNames,\n    placement = \"right\",\n    scrollBehavior = \"inside\",\n    size = \"md\",\n    motionProps: drawerMotionProps,\n    ...otherProps\n  } = originalProps;\n  const domRef = useDOMRef(ref);\n  const motionProps = useMemo(() => {\n    if (!isEmpty(drawerMotionProps)) return drawerMotionProps;\n    const key = placement === \"left\" || placement === \"right\" ? \"x\" : \"y\";\n    return {\n      variants: {\n        enter: {\n          [key]: 0,\n          transition: {\n            [key]: {\n              duration: 0.2,\n              ease: TRANSITION_EASINGS.easeOut\n            }\n          }\n        },\n        exit: {\n          [key]: placement === \"top\" || placement === \"left\" ? \"-100%\" : \"100%\",\n          transition: {\n            [key]: {\n              duration: 0.1,\n              ease: TRANSITION_EASINGS.easeIn\n            }\n          }\n        }\n      }\n    };\n  }, [placement, drawerMotionProps]);\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  const slots = useMemo(\n    () => drawer({\n      size,\n      placement\n    }),\n    [size, placement]\n  );\n  const getModalProps = useCallback(() => {\n    return {\n      classNames: {\n        ...classNames,\n        base: slots.base({ class: baseStyles })\n      },\n      motionProps,\n      scrollBehavior,\n      size,\n      ...otherProps\n    };\n  }, [baseStyles, classNames, motionProps, scrollBehavior, size, otherProps]);\n  return { domRef, getModalProps };\n}\n\nexport {\n  useDrawer\n};\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,WAAW,EAAEC,OAAO,QAAQ,OAAO;AAC5C,SAASC,kBAAkB,QAAQ,sBAAsB;AACzD,SAASC,IAAI,EAAEC,OAAO,QAAQ,sBAAsB;AACpD,SAASC,SAASA,CAACC,aAAa,EAAE;EAChC,MAAM;IACJC,GAAG;IACHC,SAAS;IACTC,UAAU;IACVC,SAAS,GAAG,OAAO;IACnBC,cAAc,GAAG,QAAQ;IACzBC,IAAI,GAAG,IAAI;IACXC,WAAW,EAAEC,iBAAiB;IAC9B,GAAGC;EACL,CAAC,GAAGT,aAAa;EACjB,MAAMU,MAAM,GAAGjB,SAAS,CAACQ,GAAG,CAAC;EAC7B,MAAMM,WAAW,GAAGZ,OAAO,CAAC,MAAM;IAChC,IAAI,CAACG,OAAO,CAACU,iBAAiB,CAAC,EAAE,OAAOA,iBAAiB;IACzD,MAAMG,GAAG,GAAGP,SAAS,KAAK,MAAM,IAAIA,SAAS,KAAK,OAAO,GAAG,GAAG,GAAG,GAAG;IACrE,OAAO;MACLQ,QAAQ,EAAE;QACRC,KAAK,EAAE;UACL,CAACF,GAAG,GAAG,CAAC;UACRG,UAAU,EAAE;YACV,CAACH,GAAG,GAAG;cACLI,QAAQ,EAAE,GAAG;cACbC,IAAI,EAAEpB,kBAAkB,CAACqB;YAC3B;UACF;QACF,CAAC;QACDC,IAAI,EAAE;UACJ,CAACP,GAAG,GAAGP,SAAS,KAAK,KAAK,IAAIA,SAAS,KAAK,MAAM,GAAG,OAAO,GAAG,MAAM;UACrEU,UAAU,EAAE;YACV,CAACH,GAAG,GAAG;cACLI,QAAQ,EAAE,GAAG;cACbC,IAAI,EAAEpB,kBAAkB,CAACuB;YAC3B;UACF;QACF;MACF;IACF,CAAC;EACH,CAAC,EAAE,CAACf,SAAS,EAAEI,iBAAiB,CAAC,CAAC;EAClC,MAAMY,UAAU,GAAGvB,IAAI,CAACM,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACkB,IAAI,EAAEnB,SAAS,CAAC;EACjF,MAAMoB,KAAK,GAAG3B,OAAO,CACnB,MAAMH,MAAM,CAAC;IACXc,IAAI;IACJF;EACF,CAAC,CAAC,EACF,CAACE,IAAI,EAAEF,SAAS,CAClB,CAAC;EACD,MAAMmB,aAAa,GAAG7B,WAAW,CAAC,MAAM;IACtC,OAAO;MACLS,UAAU,EAAE;QACV,GAAGA,UAAU;QACbkB,IAAI,EAAEC,KAAK,CAACD,IAAI,CAAC;UAAEG,KAAK,EAAEJ;QAAW,CAAC;MACxC,CAAC;MACDb,WAAW;MACXF,cAAc;MACdC,IAAI;MACJ,GAAGG;IACL,CAAC;EACH,CAAC,EAAE,CAACW,UAAU,EAAEjB,UAAU,EAAEI,WAAW,EAAEF,cAAc,EAAEC,IAAI,EAAEG,UAAU,CAAC,CAAC;EAC3E,OAAO;IAAEC,MAAM;IAAEa;EAAc,CAAC;AAClC;AAEA,SACExB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}